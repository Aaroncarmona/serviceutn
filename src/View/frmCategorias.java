/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.DatosExcelControl;
import static Controller.DatosExcelControl.importarTablaCat;
import javax.swing.ButtonGroup;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Model.User;
import Model.database;
import Model.login;
import Controller.conectar;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Oscar Alvarez
 */
public class frmCategorias extends javax.swing.JFrame {

    
    
    public frmCategorias() throws SQLException  {
        initComponents();
        this.setLocationRelativeTo(null);
        mostrar();
        //llenartabla();
    }
    
        void verificar(){
        if(jtcategoriaID.getText().equals("")||jtdesc.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los datos");
        }
    }
    public void clean(){
        jtcategoriaID.setText("");
        jtdesc.setText("");
    }
    //Mostrar en la tabla
    public void mostrar (){
        DefaultTableModel modelo = new DefaultTableModel();
        ResultSet rs = database.getTable("select categoriaID, descripcion from categoria_servicios");
        modelo.setColumnIdentifiers(new Object []{"ID","Descripcion"});
        try{
            while (rs.next()){
                modelo.addRow(new Object[]{rs.getString("categoriaID"), rs.getString("descripcion")});
                }
            tabCategorias.setModel(modelo);
            }catch(Exception e){
            System.out.print(e);
            }
        } 
    //Llenar la tabla categorias
   /*  public void llenartabla() throws SQLException{
        conectar cn= new conectar();
            Connection conn = cn.conexion();
            ResultSet rs;
            String sql="SELECT * FROM categoria_servicios";
            PreparedStatement sqls = conn.prepareStatement(sql);
            rs = sqls.executeQuery();
            DefaultTableModel modelo = new DefaultTableModel();
            tabCategorias.setModel(modelo);
            modelo.addColumn("ID");
            modelo.addColumn("Descripcion");          
            while(rs.next()){
                Object [] fila = new Object[5]; 
                for (int i=0;i<5;i++)
                fila[i] = rs.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1.
                modelo.addRow(fila); 
            }
    }*/
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtcategoriaID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtdesc = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabCategorias = new javax.swing.JTable();
        btnEnviar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnExportarXLS = new javax.swing.JButton();
        btnImportarXLS = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtcategoriaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtcategoriaIDActionPerformed(evt);
            }
        });
        jtcategoriaID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtcategoriaIDKeyTyped(evt);
            }
        });

        jLabel1.setText("Categoria ID");

        jLabel2.setText("Descripcion");

        jtdesc.setColumns(20);
        jtdesc.setRows(5);
        jScrollPane1.setViewportView(jtdesc);

        tabCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tabCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabCategoriasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabCategorias);

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardar.png"))); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Categorias");

        btnExportarXLS.setText("Exportar reporte");
        btnExportarXLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarXLSActionPerformed(evt);
            }
        });

        btnImportarXLS.setText("ImportarXSL");
        btnImportarXLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarXLSActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtcategoriaID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnImportarXLS))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(btnLimpiar)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnActualizar)
                                    .addComponent(btnExportarXLS)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel4)))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEnviar)
                            .addComponent(btnImportarXLS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar)
                            .addComponent(btnLimpiar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addGap(16, 16, 16)
                        .addComponent(btnExportarXLS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtcategoriaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCategoriasMouseClicked
        // TODO add your handling code here:
        jtcategoriaID.setText(tabCategorias.getValueAt(tabCategorias.getSelectedRow(), 0).toString());
        jtdesc.setText(tabCategorias.getValueAt(tabCategorias.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_tabCategoriasMouseClicked

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:
            verificar();

         String id=jtcategoriaID.getText();
         String desc=jtdesc.getText();
         desc = desc.toUpperCase();
         id = id.toUpperCase();
            conectar cc=new conectar();
            Connection cn=cc.conexion();
           String sql="INSERT INTO categoria_servicios(categoriaID, descripcion) "
                   + "VALUES(?, ?);";
           
 
            try{
                
                PreparedStatement pst = cn.prepareStatement(sql);
                pst.setString(1,id);
                pst.setString(2,desc);
   
                int n=pst.executeUpdate();
                if(n>0){
                    JOptionPane.showMessageDialog(null,"Registro realizado con éxito");
                    mostrar();
                    clean();
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmUsers.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null,"Por favor, verifique los campos");
            }
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
           if (jtcategoriaID.getSelectedText()=="") {
            JOptionPane.showMessageDialog(null, "Debe seleccionar algún id categoria");
            
        }
        
        Connection con = null;
       // Date date = fNac.getDate();
        //long d = date.getTime();
       // java.sql.Date fecha = new java.sql.Date(d);
        String idcat = (String) jtcategoriaID.getText();
        
        try{
            conectar cn= new conectar();
            Connection conn = cn.conexion();
             ResultSet rs;
             String sql="DELETE FROM categoria_servicios WHERE categoriaID = ?";
            PreparedStatement sqls = conn.prepareStatement(sql);
            sqls.setString(1, idcat);
            int res = sqls.executeUpdate();
            if(res > 0){
                JOptionPane.showMessageDialog(null, "Row Eliminado");
                clean();
                //llenartabla(); 
                mostrar();
            } else {
                 JOptionPane.showMessageDialog(null, "Error al eliminar");
                 clean();
                 //llenartabla(); 
                 mostrar();
            }
            
            con.close();
            
        } catch(Exception e){
            System.err.println(e);
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        verificar();
        Connection con = null;
        String idcat = (String) jtcategoriaID.getText();
        
            try{
            conectar cn= new conectar();
            Connection conn = cn.conexion();
            ResultSet rs;
            String sql="UPDATE categoria_servicios SET categoriaID = ?, descripcion = ? WHERE categoriaID ='"+idcat+"'";
            PreparedStatement sqls = conn.prepareStatement(sql);

            sqls.setString(1, jtcategoriaID.getText());
            sqls.setString(2, jtdesc.getText().toUpperCase());

            
            int res = sqls.executeUpdate();
            
            if(res > 0){
                JOptionPane.showMessageDialog(null, "Categoria actualizada");
              //llenartabla();
              mostrar();
                clean();
                
            } else {
                 JOptionPane.showMessageDialog(null, "Error al actualizar categoria");
                 JOptionPane.showMessageDialog(null, "Solo puedes actualizar la descripcion");
                 clean();
            }
            
                    
            
        } catch(Exception e){
            System.err.println(e);
        }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jtcategoriaIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtcategoriaIDKeyTyped
        // TODO add your handling code here:
////////  
int limite = 5;
char car = evt.getKeyChar();
if(Character.isLetter(car)){

}else {
evt.consume();
getToolkit().beep();
}
if(jtcategoriaID.getText().length()== limite){
   evt.consume(); 
}
    }//GEN-LAST:event_jtcategoriaIDKeyTyped

    private void btnExportarXLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarXLSActionPerformed
        try {
            DatosExcelControl c = new DatosExcelControl();
                    c.exportarExcel(tabCategorias);
        } catch (IOException ex) {
            Logger.getLogger(DatosExcelControl.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        mostrar();
        
    }//GEN-LAST:event_btnExportarXLSActionPerformed

    private void jtcategoriaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtcategoriaIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtcategoriaIDActionPerformed

    private void btnImportarXLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarXLSActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xls)", "xls");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("BUSCAR ARCHIVO");
        if (fileChooser.showOpenDialog(fileChooser) == JFileChooser.APPROVE_OPTION) {
            String valor = importarTablaCat(fileChooser.getSelectedFile().getAbsolutePath());
            if (valor.equals("hecho")) {
                JOptionPane.showMessageDialog(fileChooser, "Datos importados con éxito");
            }
            mostrar();

            if (valor.equals("error")) {
                JOptionPane.showMessageDialog(fileChooser, "Error al importar tabla.", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnImportarXLSActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        clean();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnActualizar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnEnviar;
    public javax.swing.JButton btnExportarXLS;
    public javax.swing.JButton btnImportarXLS;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField jtcategoriaID;
    public javax.swing.JTextArea jtdesc;
    public javax.swing.JTable tabCategorias;
    // End of variables declaration//GEN-END:variables
}
